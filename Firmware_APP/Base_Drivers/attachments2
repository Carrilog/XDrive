https://blog.csdn.net/billzhaobaigu/article/details/117133995  // 基于局部统计的可变阈值处理&使用移动平均的图像阈值处理 局部可变阈值的处理图
https://www.cnblogs.com/Fish0403/p/16689315.html#_label3       // 【图像处理笔记】图像分割之阈值处理  局部可变阈值的流程
数字图像处理11：阈值分割（基本全局阈值处理，Otsu 的最佳全局阈值，图像平滑改善全局阈值处理，图像分块的可变阈值）  // OTSU 的步骤
https://blog.csdn.net/billzhaobaigu/article/details/117133995    // 局部可变阈值的结果
https://blog.csdn.net/u014546828/article/details/114242435    // Retinex 的结果图，还有的图是来自于之前的周报

前面一段是抄的开题，

2、图像预处理方法
2.1基于Retinex的高斯-拉普拉斯金字塔算法
在实际的应用场景下，会有很多情况导致摄像头拍摄出来的场景亮度不均衡。比如光线强度可能因光源分布不均而存在差异；当光源来自不同方向，或者场景中存在反射和折射现象，也都会造成照片中不同区域的亮度差异；此外还会因为摄像头本身的硬件特性，如摄像头的光圈和快门设置等等，都会导致图像中部分区域亮度过高、部分区域亮度过低，影响到VSLAM系统的特征提取部分，降低了算法的鲁棒性。
对于相机因种种原因而导致的图像光度变化，进而影响VSLAM系统鲁棒性的问题，本文采用基于改进Retinex的图像增强算法，从原始图像中分解出多类照度分量，计算各个分量的权重，然后通过高斯-拉普拉斯金字塔算法，对分解出的照度分量进行融合，实现对于图像光度的矫正。具体的实现步骤如下：
第一步，在基于Retinex的图像分解与合成算法的基础上生成多个照度分量，分别计算其权重，再通过高斯-拉普拉斯金字塔对各个照度分量通道进行融合。基于Retinex理论图像照度分量分解算法流程如下式所示：
█(■(I_3i&= 1/|ω|  ∑_(k:i∈ω_k)▒〖(a_k I_1i+b_k )        〗@a_k&=(1/|ω|  ∑_(k:i∈ω_k)▒〖I_1i I_2i-μ_k ¯(I_2k )〗)/(σ_k^2+ε)@b_k&= ¯(I_2k )-a_k μ_k                            ))
其中μ_k，σ_k是引导图像在ω_k^2窗口中的均值和方差，|ω| 是窗口的大小，¯(I_2k )是被滤波图像在窗口内的均值，I_1指的是图像在对应像素位置的灰度值。这样计算得到的I_3就是原图的照度分量。
第二步，在Retinex理论基础上，再利用下式生成三个照度分量：
█(█(L_1    =   I_3@L_2=2/π  arctan⁡(λI_3 ),λ=10+(1-I_3" mean " )/I_3" mean "  @L_3=CLAHE⁡(I_3 ) ))
即L_1用来保持原图中本就有的细节，L_2用于恢复图中欠曝的细节，L_3用来提升照度分量的对比度。L_3的计算使用了CLAHE（Contrast Limited Adaptive Histogram Equalization）算法。
第三步，利用式（2-3）计算得到每个照度分量的权重。这部分计算公式也是在Retinex算法中提出的。
█(■(¯w_k (x,y)&=(w_k (x,y))/(∑_k▒〖w_k (x,y) 〗)     k∈{1,2,3}@w_k (x,y)&=w_Bk w_Ck                                    @w_Bk (x,y)&=exp⁡(-(L_k (x,y)-0.5)^2/0.125)  @w_Ck (x,y)&=L_k (x,y)                                    ))
其中w_Bk (x,y)代表亮度权重，w_Ck (x,y)为对比度权重，¯w_k (x,y)为最终三个照度分量的权重。
最后，利用高斯-拉普拉斯金字塔对四个照度分量通道进行融合。对权重¯w_k (x,y)构造高斯金字塔，对照度分量L_k (x,y)构造拉普拉斯金字塔，分别使用上采样算子进行计算，再将上采样后的高斯金字塔与拉普拉斯金字塔对应层图像的对应像素值相乘，并进行累加，便能得到融合后的照度分量，降低光照变化对图像的影响。
算法实现的图像增强结果如下：
 
 
显然，该方法能够有效地解决相机中图像照度不均衡的问题，能够从图像中提取出更多的特征信息，增强算法的鲁棒性。
2.2基于局部统计的可变阈值处理
本文的特征提取算法是在ORB-SLAM3框架上实现的。ORB-SLA3的角点特征提取方法是基于Fast角点与Brief算子，该方法的好处在于特征点的提取速度与匹配速度较快，缺点在于提取出来的特征点可能会出现局部富集以及局部缺乏等情况，会很大程度上地影响到算法的鲁棒性能。为了解决这个问题，采用基于局部统计的可变阈值处理方法，提取出图像的推荐阈值分割值，过滤掉小于该阈值的特征点，使得特征点均匀分布，以此来提升算法的鲁棒性能。
该方法是在OTSU图像全局阈值分割方法的基础上做出的改进。传统的OTSU方法实现流程如下所示：
1）计算输人图像的归一化直方图。使用 p_i,i=0,1,2,.,L-1 表示该直方图的各个分量。
2）对于 k=0,1,2,.,L-1，计算累积和 P1(k) 和 P2(k), 计算公式为：
 
3）对于 k=0,1,2…,L-1, 计算累积均值 m1(k) 和 m2(k)。计算公式为：
 
4）计算全局灰度均值 mg。计算公式为：
 
5）对于 k=0,1,2…,L-1, 计算类间方差b^2 (k)。计算公式：
 
6）得到 Otsu 阈值 k，即使得 b^2 (k) 最大的 k 值。如果最大值不唯一，用相应检测到的各个值 k 的平均得到 k*。
传统的OTSU算法对于光照不均匀的图像而言效果较差，但若图像光照稳定则能快速地找出阈值分割值。当光照不均时，应采用局部可变阈值算法：对于图像中的每一个点，根据其邻域的一条或多条规定性质计算阈值。标准差和均值对于求局部阈值是对比度和平均灰度的描述子。令m_xy和σ_xy是图像中坐标(x,y)为中心的邻域Sxy所包含的像素集的标准差和均值。下面是基于局部性质的可变阈值的通用公式：
 
分割后的图像阈值计算为：
 
式中，Q是使用邻域S_xy中的像素算出的谓词逻辑，可给可变阈值处理分配更大的权重：
 
在matlab中实现这两种算法，得到的对比图如下：
 	 	 
 	 	 
显然在图像照度不均衡的情况下，使用局部可变阈值算法能够提取到更加的图片分割阈值。但是在图像照度均衡时，使用OTSU能够更快地提取出分割阈值，这两种方法需要视具体情况而使用。
